<UserControl 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    mc:Ignorable="d" 
    >
    <UserControl.Background>
            <LinearGradientBrush>
            <GradientStopCollection>
                <GradientStop Offset="0.1" Color="White" />
                <GradientStop Offset="0.5" Color="LightGray" />
                <GradientStop Offset="0.8" Color="White" />
            </GradientStopCollection>
        </LinearGradientBrush>
    </UserControl.Background>
    <UserControl.Resources>
        <ResourceDictionary>
            <Style x:Key="MainBtnStyle" TargetType="{x:Type Button}">
                <Setter Property="Height" Value="25" />
                <Setter Property="Width" Value="150" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Margin" Value="5" />
                <Setter Property="Padding" Value="2" />
            </Style>
            <Style x:Key="MainComboBoxStyle" TargetType="{x:Type ComboBox}">
                <Setter Property="Height" Value="25" />
                <Setter Property="Width" Value="100" />
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Margin" Value="5" />
            </Style>
            <Style x:Key="MainLabelStyle" TargetType="{x:Type Label}">
                <Setter Property="Height" Value="25" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="FontWeight" Value="Bold" />
            </Style>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid >
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <GroupBox Grid.Column="0" Grid.RowSpan="2" Header="Actions"  HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,10,0,0">
            <StackPanel>
                <!--IBM_EventLog-->
                <Button
                x:Name="btn_IBM_Eventlog"
                Style="{StaticResource MainBtnStyle}"
                Content="Eventlog" />
                <!--IBM_CatAuditLog
                <Button
                x:Name="btn_IBM_CatAuditLog"
                Style="{StaticResource MainBtnStyle}"
                Content="CatAuditLog" /> -->
                <!--IBM_HostVolumeMap-->
                <Button
                x:Name="btn_IBM_HostVolumeMap"
                Style="{StaticResource MainBtnStyle}"
                Content="Host Volume Info" />
                <!--IBM_DriveInfo-->
                <Button
                x:Name="btn_IBM_DriveInfo"
                Style="{StaticResource MainBtnStyle}"
                Content="Drive Info" />
                <!--IBM_FCPortStats-->
                <Button
                x:Name="btn_IBM_FCPortStats"
                Style="{StaticResource MainBtnStyle}"
                Content="FC-Port Info" />
                <!--IBM_BackUpConfig-->
                <Button
                x:Name="btn_IBM_BackUpConfig"
                Style="{StaticResource MainBtnStyle}"
                Content="BackUp CFG" />
            </StackPanel>
        </GroupBox>       
        <GroupBox Grid.Column="1" Grid.Row="1" Header="Results" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,10,0,0" >
            <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" >
                <Grid>
<StackPanel x:Name="stp_StorageEventLog" Orientation="Vertical" Margin="2" Visibility="{Binding ElementName=btn_IBM_Eventlog, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                        </Grid.RowDefinitions>
                        <StackPanel Grid.Row="0" Grid.Column="0" >
                            <Label Content="Device 1" />   
                            <DataGrid x:Name="lb_StorageEventLogOne" AutoGenerateColumns="False" Margin="5,0,5,5" MaxHeight="420">
                            <DataGrid.RowStyle>
                                <Style TargetType="DataGridRow">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Status}" Value="alert">
                                            <Setter Property="Background" Value="Red" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.RowStyle>
                            <DataGrid.Columns>
                                <DataGridTextColumn Width="auto" Header="Time" Binding="{Binding LastTime}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="ObjectType" Binding="{Binding ObjectType}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="ObjectName" Binding="{Binding ObjectName}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="Status" Binding="{Binding Status}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="Fixed" Binding="{Binding Fixed}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="ErrorCode" Binding="{Binding ErrorCode}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="Description" Binding="{Binding Description}" IsReadOnly="True"/>
                            </DataGrid.Columns>
                        </DataGrid>
                        </StackPanel>
                        <StackPanel Grid.Row="0" Grid.Column="1" >
                            <Label Content="Device 2" />
                            <DataGrid x:Name="lb_StorageEventLogTwo" AutoGenerateColumns="False" Margin="5,0,5,5" MaxHeight="420">
                            <DataGrid.Style>
                                <Style TargetType="DataGrid">
                                    <Style.Triggers>
                                        <Trigger Property="HasItems" Value="False">
                                          <Setter Property="Visibility" Value="Collapsed"></Setter>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.Style>
                            <DataGrid.RowStyle>
                                <Style TargetType="DataGridRow">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Status}" Value="alert">
                                            <Setter Property="Background" Value="Red" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.RowStyle>
                            <DataGrid.Columns>
                                <DataGridTextColumn Width="auto" Header="Time" Binding="{Binding LastTime}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="ObjectType" Binding="{Binding ObjectType}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="ObjectName" Binding="{Binding ObjectName}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="Status" Binding="{Binding Status}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="Fixed" Binding="{Binding Fixed}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="ErrorCode" Binding="{Binding ErrorCode}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="Description" Binding="{Binding Description}" IsReadOnly="True"/>
                            </DataGrid.Columns>
                        </DataGrid>
                        </StackPanel>
                        <StackPanel Grid.Row="1" Grid.Column="0"  >
                            <Label Content="Device 3" />
                            <DataGrid x:Name="lb_StorageEventLogThree" AutoGenerateColumns="False" Margin="5,0,5,5" MaxHeight="420">
                            <DataGrid.Style>
                                <Style TargetType="DataGrid">
                                    <Style.Triggers>
                                        <Trigger Property="HasItems" Value="False">
                                          <Setter Property="Visibility" Value="Collapsed"></Setter>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.Style>
                            <DataGrid.RowStyle>
                                <Style TargetType="DataGridRow">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Status}" Value="alert">
                                            <Setter Property="Background" Value="Red" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.RowStyle>
                            <DataGrid.Columns>
                                <DataGridTextColumn Width="auto" Header="Time" Binding="{Binding LastTime}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="ObjectType" Binding="{Binding ObjectType}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="ObjectName" Binding="{Binding ObjectName}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="Status" Binding="{Binding Status}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="Fixed" Binding="{Binding Fixed}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="ErrorCode" Binding="{Binding ErrorCode}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="Description" Binding="{Binding Description}" IsReadOnly="True"/>
                            </DataGrid.Columns>
                        </DataGrid>
                        </StackPanel>
                        <StackPanel Grid.Row="1" Grid.Column="1" >
                            <Label Content="Device 4" />
                            <DataGrid x:Name="lb_StorageEventLogFour" AutoGenerateColumns="False" Margin="5,0,5,5" MaxHeight="420">
                            <DataGrid.Style>
                                <Style TargetType="DataGrid">
                                    <Style.Triggers>
                                        <Trigger Property="HasItems" Value="False">
                                          <Setter Property="Visibility" Value="Collapsed"></Setter>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.Style>
                            <DataGrid.RowStyle>
                                <Style TargetType="DataGridRow">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Status}" Value="alert">
                                            <Setter Property="Background" Value="Red" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.RowStyle>
                            <DataGrid.Columns>
                                <DataGridTextColumn Width="auto" Header="Time" Binding="{Binding LastTime}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="ObjectType" Binding="{Binding ObjectType}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="ObjectName" Binding="{Binding ObjectName}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="Status" Binding="{Binding Status}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="Fixed" Binding="{Binding Fixed}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="ErrorCode" Binding="{Binding ErrorCode}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="Description" Binding="{Binding Description}" IsReadOnly="True"/>
                            </DataGrid.Columns>
                        </DataGrid>
                        </StackPanel>
                    </Grid>
                </StackPanel>
                <StackPanel x:Name="stp_StorageAuditLog" Margin="2" Visibility="{Binding ElementName=btn_IBM_CatAuditLog, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                        </Grid.RowDefinitions>
                        <StackPanel Grid.Row="0" Grid.Column="0" >
                            <Label Content="Device 1" />
                            <DataGrid Name="lb_StorageAuditLogOne" AutoGenerateColumns="True" IsReadOnly="True" Height="Auto" Width="Auto" Margin="5,0,5,5" >
                            </DataGrid>
                        </StackPanel>
                        <StackPanel Grid.Row="0" Grid.Column="1"  >
                            <Label Content="Device 2" />
                            <DataGrid Name="lb_StorageAuditLogTwo" AutoGenerateColumns="True" IsReadOnly="True" Height="Auto" Width="Auto" Margin="5,0,5,5" >
                            </DataGrid>
                        </StackPanel>
                        <StackPanel Grid.Row="1" Grid.Column="0"  >
                            <Label Content="Device 3" />
                            <DataGrid Name="lb_StorageAuditLogThree" AutoGenerateColumns="True" IsReadOnly="True" Height="Auto" Width="Auto" Margin="5,0,5,5" >
                            </DataGrid>
                        </StackPanel>
                        <StackPanel Grid.Row="1" Grid.Column="1" >
                            <Label Content="Device 4" />
                            <DataGrid Name="lb_StorageAuditLogFour" AutoGenerateColumns="True" IsReadOnly="True" Height="Auto" Width="Auto" Margin="5,0,5,5" >
                            </DataGrid>
                        </StackPanel>
                    </Grid>
                </StackPanel>
                <StackPanel  x:Name="stp_HostVolInfo" Orientation="Horizontal" Margin="2" Visibility="{Binding ElementName=btn_IBM_HostVolumeMap, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="2">
                            <ComboBox x:Name="cb_ListFilterStorageHVM" ToolTip="Selcet your Device Panel" SelectedIndex="0" SelectedValuePath="Content" Style="{StaticResource MainComboBoxStyle}">
                                    <ComboBoxItem>1</ComboBoxItem>
                                    <ComboBoxItem>2</ComboBoxItem>
                                    <ComboBoxItem>3</ComboBoxItem>
                                    <ComboBoxItem>4</ComboBoxItem>
                                </ComboBox>
                            <ComboBox x:Name="cb_StorageHVM" ToolTip="Selcet your Filter" SelectedIndex="0" SelectedValuePath="Content" Style="{StaticResource MainComboBoxStyle}">
                                <ComboBoxItem>Host</ComboBoxItem>
                                <ComboBoxItem>HostCluster</ComboBoxItem>
                                <ComboBoxItem>Volume</ComboBoxItem>
                                <ComboBoxItem>UID</ComboBoxItem>
                                <ComboBoxItem>Capacity</ComboBoxItem>
                            </ComboBox>
                            <TextBox x:Name="tb_filter" HorizontalAlignment="Left" MinWidth="100" MaxWidth="250" Margin="5" Text="Filter" TextWrapping="Wrap" FontSize="14" VerticalContentAlignment="Center"/>
                            <Button x:Name="btn_FilterHVM" Style="{StaticResource MainBtnStyle}" Content="Apply Filter" />
                            <Label x:Name="lb_ErrorMsgHVM" Foreground="Red" Content="" Style="{StaticResource MainLabelStyle}" Padding="2" Margin="25,5,0,5"/>
                        </StackPanel>
                        <StackPanel Grid.Row="1" Orientation="Vertical" >
                        <DataGrid x:Name="dg_HostVolInfo" AutoGenerateColumns="False" Margin="5,5,5,5" MaxHeight="400">
                            <DataGrid.Columns>
                                <DataGridTextColumn Width="auto" Header="HostID" Binding="{Binding HostID}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="HostName" Binding="{Binding HostName}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="HostClusterID" Binding="{Binding HostClusterID}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="HostCluster" Binding="{Binding HostCluster}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="VolumeID" Binding="{Binding VolumeID}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="VolumeName" Binding="{Binding VolumeName}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="UID" Binding="{Binding UID}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="Capacity" Binding="{Binding Capacity}" IsReadOnly="True"/>
                            </DataGrid.Columns>
                        </DataGrid>
                        <DataGrid x:Name="dg_HostVolInfoTwo" AutoGenerateColumns="False" Margin="5,25,5,5" MaxHeight="400">
                            <DataGrid.Style>
                                <Style TargetType="DataGrid">
                                    <Style.Triggers>
                                        <Trigger Property="HasItems" Value="False">
                                          <Setter Property="Visibility" Value="Collapsed"></Setter>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.Style>
                            <DataGrid.Columns>
                                <DataGridTextColumn Width="auto" Header="HostID" Binding="{Binding HostID}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="HostName" Binding="{Binding HostName}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="HostClusterID" Binding="{Binding HostClusterID}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="HostCluster" Binding="{Binding HostCluster}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="VolumeID" Binding="{Binding VolumeID}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="VolumeName" Binding="{Binding VolumeName}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="UID" Binding="{Binding UID}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="Capacity" Binding="{Binding Capacity}" IsReadOnly="True"/>
                            </DataGrid.Columns>
                        </DataGrid>
                        <DataGrid x:Name="dg_HostVolInfoThree" AutoGenerateColumns="False" Margin="5,25,5,5" MaxHeight="400">
                            <DataGrid.Style>
                                <Style TargetType="DataGrid">
                                    <Style.Triggers>
                                        <Trigger Property="HasItems" Value="False">
                                          <Setter Property="Visibility" Value="Collapsed"></Setter>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.Style>
                            <DataGrid.Columns>
                                <DataGridTextColumn Width="auto" Header="HostID" Binding="{Binding HostID}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="HostName" Binding="{Binding HostName}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="HostClusterID" Binding="{Binding HostClusterID}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="HostCluster" Binding="{Binding HostCluster}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="VolumeID" Binding="{Binding VolumeID}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="VolumeName" Binding="{Binding VolumeName}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="UID" Binding="{Binding UID}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="Capacity" Binding="{Binding Capacity}" IsReadOnly="True"/>
                            </DataGrid.Columns>
                        </DataGrid>
                        <DataGrid x:Name="dg_HostVolInfoFour" AutoGenerateColumns="False" Margin="5,25,5,5" MaxHeight="400">
                            <DataGrid.Style>
                                <Style TargetType="DataGrid">
                                    <Style.Triggers>
                                        <Trigger Property="HasItems" Value="False">
                                          <Setter Property="Visibility" Value="Collapsed"></Setter>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.Style>
                            <DataGrid.Columns>
                                <DataGridTextColumn Width="auto" Header="HostID" Binding="{Binding HostID}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="HostName" Binding="{Binding HostName}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="HostClusterID" Binding="{Binding HostClusterID}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="HostCluster" Binding="{Binding HostCluster}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="VolumeID" Binding="{Binding VolumeID}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="VolumeName" Binding="{Binding VolumeName}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="UID" Binding="{Binding UID}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="Capacity" Binding="{Binding Capacity}" IsReadOnly="True"/>
                            </DataGrid.Columns>
                        </DataGrid>
                        </StackPanel>
                    </Grid>
                </StackPanel>
                <StackPanel  x:Name="stp_DriveInfo" Orientation="Vertical" Margin="2" Visibility="{Binding ElementName=btn_IBM_DriveInfo, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="auto" />
                        </Grid.ColumnDefinitions>
                      <!--Label need a better place to avoid repetition of code 
                        <Label Grid.Row="0" x:Name="label_ExpPDI" Content="Export Path :" Style="{StaticResource MainLabelStyle}" Margin="2,5,0,5"/> -->
                        <StackPanel Grid.Row="0" Grid.Column="0" Orientation="Vertical">
                        <Label x:Name="lb_DriveInfoOne" Content="No Device Info" Margin="0,5" FontSize="14" Height="26"/>
                        <DataGrid x:Name="dg_DriveInfo" AutoGenerateColumns="False" Margin="5" MaxHeight="400">
                            <DataGrid.Style>
                                <Style TargetType="DataGrid">
                                    <Style.Triggers>
                                        <Trigger Property="HasItems" Value="False">
                                          <Setter Property="Visibility" Value="Collapsed"></Setter>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.Style>
                            <DataGrid.RowStyle>
                                <Style TargetType="DataGridRow">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding DriveStatus}" Value="offline">
                                            <Setter Property="Background" Value="Red" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding DriveStatus}" Value="degraded">
                                            <Setter Property="Background" Value="yellow" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.RowStyle>
                            <DataGrid.Columns>
                                <DataGridTextColumn Width="auto" Header="DriveID" Binding="{Binding DriveID}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="DriveCap" Binding="{Binding DriveCap}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="PhyDriveCap" Binding="{Binding PhyDriveCap}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="PhyUsedDriveCap" Binding="{Binding PhyUsedDriveCap}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="EffeUsedDriveCap" Binding="{Binding EffeUsedDriveCap}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="DriveStatus" Binding="{Binding DriveStatus}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="DriveCap" Binding="{Binding DriveCap}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="ProductID" Binding="{Binding ProductID}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="FWlev" Binding="{Binding FWlev}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="Slot" Binding="{Binding Slot}" IsReadOnly="True"/>
                            </DataGrid.Columns>
                        </DataGrid>
                        </StackPanel>
                        <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Vertical">
                        <Label x:Name="lb_DriveInfoTwo" Content="No Device Info" Margin="0,5" FontSize="14" Height="26"/>
                        <DataGrid x:Name="dg_DriveInfoTwo" AutoGenerateColumns="False" Margin="5" MaxHeight="400">
                            <DataGrid.Style>
                                <Style TargetType="DataGrid">
                                    <Style.Triggers>
                                        <Trigger Property="HasItems" Value="False">
                                          <Setter Property="Visibility" Value="Collapsed"></Setter>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.Style>
                            <DataGrid.RowStyle>
                                <Style TargetType="DataGridRow">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding DriveStatus}" Value="offline">
                                            <Setter Property="Background" Value="Red" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding DriveStatus}" Value="degraded">
                                            <Setter Property="Background" Value="yellow" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.RowStyle>
                            <DataGrid.Columns>
                                <DataGridTextColumn Width="auto" Header="DriveID" Binding="{Binding DriveID}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="DriveCap" Binding="{Binding DriveCap}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="PhyDriveCap" Binding="{Binding PhyDriveCap}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="PhyUsedDriveCap" Binding="{Binding PhyUsedDriveCap}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="EffeUsedDriveCap" Binding="{Binding EffeUsedDriveCap}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="DriveStatus" Binding="{Binding DriveStatus}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="DriveCap" Binding="{Binding DriveCap}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="ProductID" Binding="{Binding ProductID}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="FWlev" Binding="{Binding FWlev}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="Slot" Binding="{Binding Slot}" IsReadOnly="True"/>
                            </DataGrid.Columns>
                        </DataGrid>
                        </StackPanel>
                        <StackPanel Grid.Row="1" Grid.Column="0" Orientation="Vertical">
                        <Label x:Name="lb_DriveInfoThree" Content="No Device Info" Margin="0,5" FontSize="14" Height="26"/>
                        <DataGrid x:Name="dg_DriveInfoThree" AutoGenerateColumns="False" Margin="5" MaxHeight="400">
                            <DataGrid.Style>
                                <Style TargetType="DataGrid">
                                    <Style.Triggers>
                                        <Trigger Property="HasItems" Value="False">
                                          <Setter Property="Visibility" Value="Collapsed"></Setter>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.Style>
                            <DataGrid.RowStyle>
                                <Style TargetType="DataGridRow">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding DriveStatus}" Value="offline">
                                            <Setter Property="Background" Value="Red" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding DriveStatus}" Value="degraded">
                                            <Setter Property="Background" Value="yellow" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.RowStyle>
                            <DataGrid.Columns>
                                <DataGridTextColumn Width="auto" Header="DriveID" Binding="{Binding DriveID}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="DriveCap" Binding="{Binding DriveCap}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="PhyDriveCap" Binding="{Binding PhyDriveCap}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="PhyUsedDriveCap" Binding="{Binding PhyUsedDriveCap}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="EffeUsedDriveCap" Binding="{Binding EffeUsedDriveCap}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="DriveStatus" Binding="{Binding DriveStatus}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="DriveCap" Binding="{Binding DriveCap}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="ProductID" Binding="{Binding ProductID}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="FWlev" Binding="{Binding FWlev}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="Slot" Binding="{Binding Slot}" IsReadOnly="True"/>
                            </DataGrid.Columns>
                        </DataGrid>
                        </StackPanel>
                        <StackPanel Grid.Row="1" Grid.Column="1" Orientation="Vertical">
                        <Label x:Name="lb_DriveInfoFour" Content="No Device Info" Margin="0,5" FontSize="14" Height="26"/>
                        <DataGrid x:Name="dg_DriveInfoFour" AutoGenerateColumns="False" Margin="5" MaxHeight="400">
                            <DataGrid.Style>
                                <Style TargetType="DataGrid">
                                    <Style.Triggers>
                                        <Trigger Property="HasItems" Value="False">
                                          <Setter Property="Visibility" Value="Collapsed"></Setter>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.Style>
                            <DataGrid.RowStyle>
                                <Style TargetType="DataGridRow">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding DriveStatus}" Value="offline">
                                            <Setter Property="Background" Value="Red" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding DriveStatus}" Value="degraded">
                                            <Setter Property="Background" Value="yellow" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.RowStyle>
                            <DataGrid.Columns>
                                <DataGridTextColumn Width="auto" Header="DriveID" Binding="{Binding DriveID}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="DriveCap" Binding="{Binding DriveCap}" IsReadOnly="True" />
                                <DataGridTextColumn Width="auto" Header="PhyDriveCap" Binding="{Binding PhyDriveCap}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="PhyUsedDriveCap" Binding="{Binding PhyUsedDriveCap}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="EffeUsedDriveCap" Binding="{Binding EffeUsedDriveCap}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="DriveStatus" Binding="{Binding DriveStatus}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="DriveCap" Binding="{Binding DriveCap}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="ProductID" Binding="{Binding ProductID}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="FWlev" Binding="{Binding FWlev}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="Slot" Binding="{Binding Slot}" IsReadOnly="True"/>
                            </DataGrid.Columns>
                        </DataGrid>
                        </StackPanel>
                    </Grid>
                </StackPanel>
                <StackPanel  x:Name="stp_FCPortStats" Orientation="Horizontal" Margin="2" Visibility="{Binding ElementName=btn_IBM_FCPortStats, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="2">
                        <!--Button need a implem. for more as one Storage  -->
                        <!-- <Button x:Name="btn_UpFilFCPS" Style="{StaticResource MainBtnStyle}" Content="Update Filter" /> -->
                        <!--Label need a better place to avoid repetition of code
                        <Label x:Name="label_ExpPFCPS" Content="Export Path :" Style="{StaticResource MainLabelStyle}" Margin="25,5,0,5"/> -->
                        <!--Label with info to command need to checked -->
                        <!-- <Label Content="You need admin rights to use this command." Style="{StaticResource MainLabelStyle}" Margin="10,5,0,5"/> -->
                        </StackPanel>
                        <StackPanel Orientation="Vertical" Grid.Row="1">
                        <DataGrid Grid.Row="1" Grid.Column="1" x:Name="dg_FCPortStatsOne" AutoGenerateColumns="False" Margin="5" MaxHeight="400">
                            <DataGrid.Style>
                                <Style TargetType="DataGrid">
                                    <Style.Triggers>
                                        <Trigger Property="HasItems" Value="False">
                                          <Setter Property="Visibility" Value="Collapsed"></Setter>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.Style>
                            <DataGrid.RowStyle>
                                <Style TargetType="DataGridRow">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding LinkFailure}" Value="True">
                                            <Setter Property="Background" Value="Red" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.RowStyle>
                            <DataGrid.Columns>
                                <DataGridTextColumn Width="auto" Header="NodeID"  Binding ="{Binding NodeID}" IsReadOnly="True"/>
                                <!-- <DataGridTextColumn Width="auto" Header="NodeSN" Binding ="{Binding NodeSN}" IsReadOnly="True"/>  -->
                                <DataGridTextColumn Width="auto" Header="NodeName" Binding ="{Binding NodeName}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="NodeWWNN"  Binding ="{Binding NodeWWNN}" IsReadOnly="True"/>  
                                <DataGridTextColumn Width="auto" Header="CardType" Binding ="{Binding CardType}" IsReadOnly="True"/>  
                                <DataGridTextColumn Width="auto" Header="CardID" Binding ="{Binding CardID}" IsReadOnly="True"/> 
                                <DataGridTextColumn Width="auto" Header="PortID" Binding ="{Binding PortID}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="WWPN" Binding ="{Binding WWPN}" IsReadOnly="True"/>  
                                <DataGridTextColumn Width="auto" Header="LinkFailure" Binding ="{Binding LinkFailure}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="LoseSync" Binding ="{Binding LoseSync}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="LoseSig" Binding ="{Binding LoseSig}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="PSErrCount" Binding ="{Binding PSErrCount}" IsReadOnly="True"/> 
                                <DataGridTextColumn Width="auto" Header="InvTransErr" Binding ="{Binding InvTransErr}" IsReadOnly="True"/>  
                                <DataGridTextColumn Width="auto" Header="CRCErr" Binding ="{Binding CRCErr}" IsReadOnly="True"/> 
                                <DataGridTextColumn Width="auto" Header="ZeroBtB" Binding ="{Binding ZeroBtB}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="SFPTemp" Binding ="{Binding SFPTemp}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="TXPwr" Binding ="{Binding TXPwr}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="RXPwr" Binding ="{Binding RXPwr}" IsReadOnly="True"/>
                            </DataGrid.Columns>
                        </DataGrid>
                        <DataGrid Grid.Row="1" Grid.Column="1" x:Name="dg_FCPortStatsTwo" AutoGenerateColumns="False" Margin="5" MaxHeight="400">
                            <DataGrid.Style>
                                <Style TargetType="DataGrid">
                                    <Style.Triggers>
                                        <Trigger Property="HasItems" Value="False">
                                          <Setter Property="Visibility" Value="Collapsed"></Setter>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.Style>
                            <DataGrid.RowStyle>
                                <Style TargetType="DataGridRow">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding LinkFailure}" Value="True">
                                            <Setter Property="Background" Value="Red" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.RowStyle>
                            <DataGrid.Columns>
                                <DataGridTextColumn Width="auto" Header="NodeID"  Binding ="{Binding NodeID}" IsReadOnly="True"/>
                                <!-- <DataGridTextColumn Width="auto" Header="NodeSN" Binding ="{Binding NodeSN}" IsReadOnly="True"/>  -->
                                <DataGridTextColumn Width="auto" Header="NodeName" Binding ="{Binding NodeName}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="NodeWWNN"  Binding ="{Binding NodeWWNN}" IsReadOnly="True"/>  
                                <DataGridTextColumn Width="auto" Header="CardType" Binding ="{Binding CardType}" IsReadOnly="True"/>  
                                <DataGridTextColumn Width="auto" Header="CardID" Binding ="{Binding CardID}" IsReadOnly="True"/> 
                                <DataGridTextColumn Width="auto" Header="PortID" Binding ="{Binding PortID}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="WWPN" Binding ="{Binding WWPN}" IsReadOnly="True"/>  
                                <DataGridTextColumn Width="auto" Header="LinkFailure" Binding ="{Binding LinkFailure}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="LoseSync" Binding ="{Binding LoseSync}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="LoseSig" Binding ="{Binding LoseSig}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="PSErrCount" Binding ="{Binding PSErrCount}" IsReadOnly="True"/> 
                                <DataGridTextColumn Width="auto" Header="InvTransErr" Binding ="{Binding InvTransErr}" IsReadOnly="True"/>  
                                <DataGridTextColumn Width="auto" Header="CRCErr" Binding ="{Binding CRCErr}" IsReadOnly="True"/> 
                                <DataGridTextColumn Width="auto" Header="ZeroBtB" Binding ="{Binding ZeroBtB}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="SFPTemp" Binding ="{Binding SFPTemp}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="TXPwr" Binding ="{Binding TXPwr}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="RXPwr" Binding ="{Binding RXPwr}" IsReadOnly="True"/>
                            </DataGrid.Columns>
                        </DataGrid>
                        <DataGrid Grid.Row="1" Grid.Column="1" x:Name="dg_FCPortStatsThree" AutoGenerateColumns="False" Margin="5" MaxHeight="400">
                            <DataGrid.Style>
                                <Style TargetType="DataGrid">
                                    <Style.Triggers>
                                        <Trigger Property="HasItems" Value="False">
                                          <Setter Property="Visibility" Value="Collapsed"></Setter>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.Style>
                            <DataGrid.RowStyle>
                                <Style TargetType="DataGridRow">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding LinkFailure}" Value="True">
                                            <Setter Property="Background" Value="Red" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.RowStyle>
                            <DataGrid.Columns>
                                <DataGridTextColumn Width="auto" Header="NodeID"  Binding ="{Binding NodeID}" IsReadOnly="True"/>
                                <!-- <DataGridTextColumn Width="auto" Header="NodeSN" Binding ="{Binding NodeSN}" IsReadOnly="True"/>  -->
                                <DataGridTextColumn Width="auto" Header="NodeName" Binding ="{Binding NodeName}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="NodeWWNN"  Binding ="{Binding NodeWWNN}" IsReadOnly="True"/>  
                                <DataGridTextColumn Width="auto" Header="CardType" Binding ="{Binding CardType}" IsReadOnly="True"/>  
                                <DataGridTextColumn Width="auto" Header="CardID" Binding ="{Binding CardID}" IsReadOnly="True"/> 
                                <DataGridTextColumn Width="auto" Header="PortID" Binding ="{Binding PortID}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="WWPN" Binding ="{Binding WWPN}" IsReadOnly="True"/>  
                                <DataGridTextColumn Width="auto" Header="LinkFailure" Binding ="{Binding LinkFailure}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="LoseSync" Binding ="{Binding LoseSync}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="LoseSig" Binding ="{Binding LoseSig}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="PSErrCount" Binding ="{Binding PSErrCount}" IsReadOnly="True"/> 
                                <DataGridTextColumn Width="auto" Header="InvTransErr" Binding ="{Binding InvTransErr}" IsReadOnly="True"/>  
                                <DataGridTextColumn Width="auto" Header="CRCErr" Binding ="{Binding CRCErr}" IsReadOnly="True"/> 
                                <DataGridTextColumn Width="auto" Header="ZeroBtB" Binding ="{Binding ZeroBtB}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="SFPTemp" Binding ="{Binding SFPTemp}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="TXPwr" Binding ="{Binding TXPwr}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="RXPwr" Binding ="{Binding RXPwr}" IsReadOnly="True"/>
                            </DataGrid.Columns>
                        </DataGrid>
                        <DataGrid Grid.Row="1" Grid.Column="1" x:Name="dg_FCPortStatsFour" AutoGenerateColumns="False" Margin="5" MaxHeight="400">
                            <DataGrid.Style>
                                <Style TargetType="DataGrid">
                                    <Style.Triggers>
                                        <Trigger Property="HasItems" Value="False">
                                          <Setter Property="Visibility" Value="Collapsed"></Setter>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.Style>
                            <DataGrid.RowStyle>
                                <Style TargetType="DataGridRow">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding LinkFailure}" Value="True">
                                            <Setter Property="Background" Value="Red" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.RowStyle>
                            <DataGrid.Columns>
                                <DataGridTextColumn Width="auto" Header="NodeID"  Binding ="{Binding NodeID}" IsReadOnly="True"/>
                                <!-- <DataGridTextColumn Width="auto" Header="NodeSN" Binding ="{Binding NodeSN}" IsReadOnly="True"/>  -->
                                <DataGridTextColumn Width="auto" Header="NodeName" Binding ="{Binding NodeName}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="NodeWWNN"  Binding ="{Binding NodeWWNN}" IsReadOnly="True"/>  
                                <DataGridTextColumn Width="auto" Header="CardType" Binding ="{Binding CardType}" IsReadOnly="True"/>  
                                <DataGridTextColumn Width="auto" Header="CardID" Binding ="{Binding CardID}" IsReadOnly="True"/> 
                                <DataGridTextColumn Width="auto" Header="PortID" Binding ="{Binding PortID}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="WWPN" Binding ="{Binding WWPN}" IsReadOnly="True"/>  
                                <DataGridTextColumn Width="auto" Header="LinkFailure" Binding ="{Binding LinkFailure}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="LoseSync" Binding ="{Binding LoseSync}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="LoseSig" Binding ="{Binding LoseSig}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="PSErrCount" Binding ="{Binding PSErrCount}" IsReadOnly="True"/> 
                                <DataGridTextColumn Width="auto" Header="InvTransErr" Binding ="{Binding InvTransErr}" IsReadOnly="True"/>  
                                <DataGridTextColumn Width="auto" Header="CRCErr" Binding ="{Binding CRCErr}" IsReadOnly="True"/> 
                                <DataGridTextColumn Width="auto" Header="ZeroBtB" Binding ="{Binding ZeroBtB}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="SFPTemp" Binding ="{Binding SFPTemp}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="TXPwr" Binding ="{Binding TXPwr}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="auto" Header="RXPwr" Binding ="{Binding RXPwr}" IsReadOnly="True"/>
                            </DataGrid.Columns>
                        </DataGrid>
                        </StackPanel>  
                    </Grid>
                </StackPanel>     
                <StackPanel x:Name="stp_BackUpConfig" Orientation="Horizontal" Margin="2" Visibility="{Binding ElementName=btn_IBM_BackUpConfig, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed }">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <StackPanel Grid.Row="0" >
                            <Button x:Name="btn_IBM_CleanUpConfigDir" Style="{StaticResource MainBtnStyle}" Content="Stats Clear" Margin="2,2,2,5" HorizontalAlignment="Left" Background="LightCoral" />
                        </StackPanel>
                        <StackPanel Grid.Row="1" Grid.Column="0" >
                            <Label Content="Device 1" />
                            <TextBlock x:Name="tb_BackUpInfoDeviceOne" TextWrapping="Wrap" MaxWidth="400" Text="" />
                        </StackPanel>
                        <StackPanel Grid.Row="1" Grid.Column="1" >
                            <Label Content="Device 2" />
                            <TextBlock x:Name="tb_BackUpInfoDeviceTwo" TextWrapping="Wrap" MaxWidth="400" Text="" />
                        </StackPanel>
                        <StackPanel Grid.Row="2" Grid.Column="0" >
                            <Label Content="Device 3" />
                            <TextBlock x:Name="tb_BackUpInfoDeviceThree" TextWrapping="Wrap" MaxWidth="400" Text="" />
                        </StackPanel>
                        <StackPanel Grid.Row="2" Grid.Column="1" >
                            <Label Content="Device 4" />
                            <TextBlock x:Name="tb_BackUpInfoDeviceFour" TextWrapping="Wrap" MaxWidth="400" Text="" />
                        </StackPanel>
                        <StackPanel Grid.Row="3" Grid.ColumnSpan="2" >
                            <Label Content="Exported Files" Margin="0"/>
                            <TextBlock x:Name="tb_BackUpFileErrorInfo" TextWrapping="Wrap" MaxWidth="600" Text="" Margin="5,0,5,5"/>
                            <DataGrid Name="tb_BackUpFileInfoDevice" AutoGenerateColumns="False" IsReadOnly="True" Height="Auto" Width="Auto" Margin="5,0,5,5" >
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="FileName" Binding="{Binding Name}" IsReadOnly="True"/>
                                </DataGrid.Columns>
                            </DataGrid>
                        </StackPanel>
                    </Grid>
                </StackPanel>  
                </Grid> 
            </ScrollViewer>
        </GroupBox>
    </Grid>
</UserControl>